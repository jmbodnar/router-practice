{"version":3,"sources":["components/main-header.jsx","components/nav.jsx","pages/Home/Home.jsx","pages/Home/index.js","components/page-header.jsx","pages/Recipes/index.js","pages/Recipes/Recipes.jsx","pages/Recipe/index.js","pages/Recipe/Recipe.jsx","pages/About/About.jsx","pages/About/index.js","App.jsx","index.js"],"names":["Header","className","to","Nav","props","Home","PageHeader","state","this","title","Component","Recipes","recipes","categories","users","getRecipes","a","async","fetch","json","getCategoryTitle","id","filter","c","Number","_id","then","data","setState","Fragment","map","r","key","mainIngredient","categoryId","likes","Recipe","recipe","comments","category","user","getRecipe","match","params","getComments","getUser","getCategory","comment","String","recipeId","About","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df5c8166.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"jumbotron mb-0\">\n      <h1 className=\"text-center\">\n        <Link to=\"/\">â€˜Tis the Seasoning</Link>\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = props => {\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark sticky-top mb-4\">\n      <div className=\"container collapse navbar-collapse\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/recipes\" className=\"nav-link\">\n              Recipes\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div>\n      <header>\n        <h2>Home Header</h2>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from \"./Home.jsx\";\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass PageHeader extends Component {\n  state = {};\n  render() {\n    return (\n      <header className=\"text-center mb-4\">\n        <h2>{this.props.title}</h2>\n      </header>\n    );\n  }\n}\n\nexport default PageHeader;\n","import Recipes from \"./Recipes.jsx\";\n\nexport default Recipes;\n","// ----- Libraries, etc ----- //\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ----- Components ----- //\nimport PageHeader from \"../../components/page-header\";\n\nclass Recipes extends Component {\n  state = {\n    recipes: [],\n    categories: [],\n    users: []\n  };\n\n  getRecipes = async () => {\n    return await (\n      await fetch(`https://my-json-server.typicode.com/jmbodnar/recipes-db/db`)\n    ).json();\n  };\n\n  componentDidMount() {\n    this.getRecipes().then(data => {\n      const { recipes, categories, users } = data;\n      this.setState({ recipes, categories, users });\n    });\n  }\n\n  getCategoryTitle = id => {\n    let x = this.state.categories.filter(c => Number(id) === c._id)[0];\n    return x.title;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader title=\"Recipes\" />\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped table-borderless table-hover\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th>Title</th>\n                <th>Main Ingredient</th>\n                <th>Category</th>\n                <th>Likes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.recipes.map(r => {\n                return (\n                  <tr key={r._id}>\n                    <td>\n                      <Link to={\"recipes/\" + r._id}>{r.title}</Link>\n                    </td>\n                    <td>{r.mainIngredient}</td>\n                    <td>{this.getCategoryTitle(r.categoryId)}</td>\n                    <td>{r.likes}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recipes;\n","import Recipe from \"./Recipe.jsx\";\n\nexport default Recipe;\n","import React, { Component } from \"react\";\n\n// ----- Components ----- //\nimport PageHeader from \"../../components/page-header\";\n\nclass Recipe extends Component {\n  state = {\n    recipe: {},\n    comments: [],\n    category: {},\n    user: {}\n  };\n\n  // React router's Link element gives access to this.props.match,\n  getRecipe = async () => {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/recipes?_id=${this.props.match.params.id}`\n      )\n    ).json();\n  };\n\n  getComments = async () => {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/comments`\n      )\n    ).json();\n  };\n\n  getUser = async () => {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/users`\n      )\n    ).json();\n  };\n\n  getCategory = async () => {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/categories`\n      )\n    ).json();\n  };\n\n  componentDidMount() {\n    this.getRecipe()\n      .then(data => {\n        const [recipe] = data;\n        this.setState({ recipe });\n      })\n      .then(() => {\n        this.getComments().then(data => {\n          const comments = data.filter(comment => {\n            return (\n              String(comment.recipeId) === String(this.props.match.params.id)\n            );\n          });\n\n          this.setState({ comments });\n        });\n\n        this.getUser().then(data => {\n          const [user] = data.filter(user => {\n            return String(this.props.match.params.id) === String(user._id);\n          });\n          this.setState({ user });\n        });\n\n        this.getCategory().then(data => {\n          const [category] = data.filter(category => {\n            return (\n              String(this.state.recipe.categoryId) === String(category._id)\n            );\n          });\n          this.setState({ category });\n        });\n      });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader title={this.state.recipe.title} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recipe;\n","import React from \"react\";\nimport PageHeader from \"../../components/page-header\";\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <PageHeader title=\"About\" />\n    </React.Fragment>\n  );\n}\n\nexport default About;\n","import About from \"./About.jsx\";\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n// ----- Component Imports ----- //\nimport MainHeader from \"./components/main-header\";\nimport Nav from \"./components/nav\";\n\n// ----- Page Imports ----- //\nimport Home from \"./pages/Home\";\nimport Recipes from \"./pages/Recipes\";\nimport Recipe from \"./pages/Recipe\";\nimport About from \"./pages/About\";\n\n// ----- Main Componentn ----- //\nclass App extends Component {\n  state = {\n    recipes: [],\n    categories: [],\n    users: []\n  };\n\n  getRecipes = async () => {\n    return await (\n      await fetch(`https://my-json-server.typicode.com/jmbodnar/recipes-db/db`)\n    ).json();\n  };\n\n  componentDidMount() {\n    this.getRecipes().then(data => {\n      const { recipes, categories, users } = data;\n      this.setState({ recipes, categories, users });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Router basename=\"/router-practice/\">\n          <MainHeader />\n          <Nav />\n          <main className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route\n                exact\n                path=\"/recipes\"\n                component={Recipes}\n                data={this.state}\n              />\n              <Route path=\"/recipes/:id\" component={Recipe} />\n              <Route exact path=\"/about\" component={About} />\n            </Switch>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}