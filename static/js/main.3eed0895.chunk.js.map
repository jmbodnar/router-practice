{"version":3,"sources":["components/main-header.jsx","components/nav.jsx","components/page-header.jsx","pages/Home/Home.jsx","pages/Home/index.js","pages/Recipes/index.js","pages/Recipes/Recipes.jsx","services/api.js","pages/Recipe/index.js","pages/Recipe/Recipe.jsx","pages/About/About.jsx","pages/About/index.js","App.jsx","index.js"],"names":["Header","className","to","Nav","props","PageHeader","state","style","fontSize","this","title","Component","Home","Recipes","recipes","categories","users","getCategoryTitle","id","filter","c","Number","_id","a","async","fetch","json","console","error","then","data","setState","Fragment","map","r","key","mainIngredient","categoryId","likes","Recipe","recipe","comments","category","user","getUser","getCategory","getDate","string","Date","toLocaleDateString","recipeId","match","params","comment","String","forEach","userId","username","firstname","lastname","directions","dateAdded","ingredients","text","About","App","getRecipes","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eed0895.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"jumbotron text-center mb-0\">\n      <h1 className=\"display-4\">\n        <Link to=\"/\">â€˜Tis the Seasoning</Link>\n      </h1>\n      <p className=\"container my-4\">\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Mollitia\n        voluptatum quidem harum.\n      </p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = props => {\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark sticky-top mb-4\">\n      <div className=\"container collapse navbar-collapse\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/recipes\" className=\"nav-link\">\n              Recipes\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { Component } from \"react\";\n\nclass PageHeader extends Component {\n  state = {};\n  render() {\n    return (\n      <header className=\"text-center mb-4\">\n        <h2 className=\" display-4\" style={{ fontSize: \"1.75rem\" }}>\n          {this.props.title}\n        </h2>\n      </header>\n    );\n  }\n}\n\nexport default PageHeader;\n","import React from \"react\";\n\n// ----- Components ----- //\nimport PageHeader from \"../../components/page-header\";\n\nfunction Home() {\n  return <PageHeader title=\"Home\" />;\n}\n\nexport default Home;\n","import Home from \"./Home.jsx\";\n\nexport default Home;\n","import Recipes from \"./Recipes.jsx\";\n\nexport default Recipes;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getAllData } from \"../../services/api\";\n\n// ----- Components ----- //\nimport PageHeader from \"../../components/page-header\";\n\nclass Recipes extends Component {\n  state = {\n    recipes: [],\n    categories: [],\n    users: []\n  };\n\n  /**\n   * Match recipe's categoryId to category's _id, return category's title\n   * @param {Number | String}\n   * @returns {String} Category's title string\n   */\n  getCategoryTitle = id => {\n    const [category] = this.state.categories.filter(c => Number(id) === c._id);\n    return category.title;\n  };\n\n  componentDidMount() {\n    getAllData().then(data => {\n      const { recipes, categories, users } = data;\n      this.setState({ recipes, categories, users });\n    });\n  }\n\n  render() {\n    const { recipes } = this.state;\n    return (\n      <React.Fragment>\n        <PageHeader title=\"Recipes\" />\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped table-borderless table-hover\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th>Title</th>\n                <th>Main Ingredient</th>\n                <th>Category</th>\n                <th>Likes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {recipes.map(r => {\n                return (\n                  <tr key={r._id}>\n                    <td>\n                      <Link to={\"recipes/\" + r._id}>{r.title}</Link>\n                    </td>\n                    <td>{r.mainIngredient}</td>\n                    <td>{this.getCategoryTitle(r.categoryId)}</td>\n                    <td>{r.likes}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recipes;\n","/**\n * Get all data from the database\n * @return {Array} All of the data from the recipes database\n */\nexport async function getAllData() {\n  try {\n    return await (\n      await fetch(`https://my-json-server.typicode.com/jmbodnar/recipes-db/db`)\n    ).json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n * Get all recipes data from the database\n * @return {Array} All of the recipe data from the recipes database\n */\nexport async function getAllRecipes() {\n  try {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/recipes`\n      )\n    ).json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n * Get all the recipe data from the database\n * @return {Array} All of the recipe data from the recipes database\n */\nexport async function getAllComments() {\n  try {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/comments`\n      )\n    ).json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n *\n * Get the data for one recipe\n * @param {String} recipeId The _id of a single recipe\n * @returns {Array} An aray with a single recipe object\n */\nexport async function getOneRecipe(recipeId) {\n  try {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/recipes?_id=${recipeId}`\n      )\n    ).json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import Recipe from \"./Recipe.jsx\";\n\nexport default Recipe;\n","import React, { Component } from \"react\";\n\nimport { getOneRecipe, getAllComments } from \"../../services/api\";\n\n// ----- Components ----- //\nimport PageHeader from \"../../components/page-header\";\n\nclass Recipe extends Component {\n  state = {\n    recipe: {},\n    comments: [],\n    category: {},\n    user: {}\n  };\n\n  getUser = async () => {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/users`\n      )\n    ).json();\n  };\n\n  getCategory = async () => {\n    return await (\n      await fetch(\n        `https://my-json-server.typicode.com/jmbodnar/recipes-db/categories`\n      )\n    ).json();\n  };\n\n  // ----- Calling ----- //\n  componentDidMount() {\n    getOneRecipe(this.props.match.params.id)\n      .then(data => {\n        const [recipe] = data;\n        this.setState({ recipe });\n      })\n      .then(() => {\n        getAllComments().then(data => {\n          const comments = data.filter(comment => {\n            return (\n              String(comment.recipeId) === String(this.props.match.params.id)\n            );\n          });\n\n          comments.forEach(comment => {\n            this.getUser()\n              .then(users => {\n                let [user] = users.filter(user => {\n                  return String(comment.userId) === String(user._id);\n                });\n                return user;\n              })\n              .then(user => {\n                comment.username = user.firstname + \" \" + user.lastname;\n                this.setState({ comments });\n              });\n          });\n        });\n\n        this.getUser().then(data => {\n          const [user] = data.filter(user => {\n            return String(this.props.match.params.id) === String(user._id);\n          });\n          this.setState({ user });\n        });\n\n        this.getCategory().then(data => {\n          const [category] = data.filter(category => {\n            return (\n              String(this.state.recipe.categoryId) === String(category._id)\n            );\n          });\n          this.setState({ category });\n        });\n      });\n  }\n\n  getDate = string => {\n    let date = new Date(string);\n    return date.toLocaleDateString();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader title={this.state.recipe.title} />\n        <section className=\"row\">\n          <div className=\"col-sm-8\">\n            <dl>\n              <dt>Description</dt>\n              <dd>\n                This wonderful recipe is summarized in this blurb. It's so good\n                and people love to it eat. Every recipe will have a short\n                marketing blurb like this.\n              </dd>\n\n              <dt>Directions</dt>\n              <dd>{this.state.recipe.directions}</dd>\n\n              <dt>Added by</dt>\n              <dd>\n                {this.state.user.firstname +\n                  \" \" +\n                  this.state.user.lastname +\n                  \" | \" +\n                  this.getDate(this.state.recipe.dateAdded)}\n              </dd>\n            </dl>\n          </div>\n          <div className=\"col-sm-4\">\n            <dl>\n              <dt>Category</dt>\n              <dd>{this.state.category.title}</dd>\n\n              <dt>Main Ingredient</dt>\n              <dd>{this.state.recipe.mainIngredient}</dd>\n\n              <dt>Ingredients</dt>\n              <dd>{this.state.recipe.ingredients}</dd>\n\n              <dt>Creator</dt>\n              <dd>\n                {this.state.user.firstname + \" \" + this.state.user.lastname}\n              </dd>\n            </dl>\n          </div>\n        </section>\n        <PageHeader title=\"Comments\" />\n        <section className=\"row list-group mb-4 px-3\">\n          {this.state.comments.map(comment => {\n            return (\n              <details className=\"mb-1\" key={comment._id}>\n                <summary>\n                  {comment.username} ({this.getDate(comment.dateAdded)})\n                </summary>\n                <div className=\"alert\">\n                  <p>{comment.text}</p>\n                </div>\n              </details>\n            );\n          })}\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recipe;\n","import React from \"react\";\nimport PageHeader from \"../../components/page-header\";\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <PageHeader title=\"About\" />\n    </React.Fragment>\n  );\n}\n\nexport default About;\n","import About from \"./About.jsx\";\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// ----- Component Imports ----- //\nimport MainHeader from \"./components/main-header\";\nimport Nav from \"./components/nav\";\n\n// ----- Page Imports ----- //\nimport Home from \"./pages/Home\";\nimport Recipes from \"./pages/Recipes\";\nimport Recipe from \"./pages/Recipe\";\nimport About from \"./pages/About\";\n\n// ----- Main Componentn ----- //\nclass App extends Component {\n  state = {\n    recipes: [],\n    categories: [],\n    users: []\n  };\n\n  getRecipes = async () => {\n    return await (\n      await fetch(`https://my-json-server.typicode.com/jmbodnar/recipes-db/db`)\n    ).json();\n  };\n\n  componentDidMount() {\n    this.getRecipes().then(data => {\n      const { recipes, categories, users } = data;\n      this.setState({ recipes, categories, users });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Router basename=\"/router-practice/\">\n          <MainHeader />\n          <Nav />\n          <main className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route\n                exact\n                path=\"/recipes\"\n                component={Recipes}\n                data={this.state}\n              />\n              <Route path=\"/recipes/:id\" component={Recipe} />\n              <Route exact path=\"/about\" component={About} />\n            </Switch>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}